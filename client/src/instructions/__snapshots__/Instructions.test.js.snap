// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Instructions renders keyboard instructions 1`] = `
<div
  className="container"
>
  <section
    className="modal"
  >
    <p
      className="paragraph"
    >
      instructions.overview
    </p>
    <div
      className="iconParagraphContainer"
    >
      <span
        className="span span--small keyboardArrowRightIcon iconParagraphIcon iconParagraphKeyboardIcon"
      >
        <keyboardArrowRight.svg
          className="svg"
        />
      </span>
      <p
        className="iconParagraph"
      >
        instructions.keyboardRight
      </p>
    </div>
    <div
      className="iconParagraphContainer"
    >
      <span
        className="span span--small keyboardArrowLeftIcon iconParagraphIcon iconParagraphKeyboardIcon"
      >
        <keyboardArrowLeft.svg
          className="svg"
        />
      </span>
      <p
        className="iconParagraph"
      >
        instructions.keyboardLeft
      </p>
    </div>
    <div
      className="iconParagraphContainer"
    >
      <div
        className="fauxButton"
      >
        <span
          className="span span--tiny searchIcon iconParagraphIcon"
        >
          <search.svg
            className="svg"
          />
        </span>
      </div>
      <p
        className="iconParagraph"
      >
        instructions.definitionMouse
      </p>
    </div>
    <div
      className="iconParagraphContainer"
    >
      <div
        className="fauxButton"
      >
        <span
          className="span span--tiny undoIcon iconParagraphIcon"
        >
          <undo.svg
            className="svg"
          />
        </span>
      </div>
      <p
        className="iconParagraph"
      >
        instructions.undoMouse
      </p>
    </div>
    <div
      className="characterSetContainer"
    >
      <input
        id="traditionalCheckbox"
        onChange={[Function]}
        type="checkbox"
      />
       
      <label
        htmlFor="traditionalCheckbox"
      >
        instructions.traditionalLabel
      </label>
    </div>
    <button
      className="button button"
      onClick={[Function]}
    >
      instructions.startTestButton
    </button>
  </section>
</div>
`;

exports[`Instructions renders touch instructions 1`] = `
<div
  className="container"
>
  <section
    className="modal"
  >
    <p
      className="paragraph"
    >
      instructions.overview
    </p>
    <div
      className="iconParagraphContainer"
    >
      <span
        className="span span--medium swipeRightIcon iconParagraphIcon"
      >
        <swipeRight.svg
          className="svg"
        />
      </span>
      <p
        className="iconParagraph"
      >
        instructions.swipeRight
      </p>
    </div>
    <div
      className="iconParagraphContainer"
    >
      <span
        className="span span--medium swipeLeftIcon iconParagraphIcon"
      >
        <swipeLeft.svg
          className="svg"
        />
      </span>
      <p
        className="iconParagraph"
      >
        instructions.swipeLeft
      </p>
    </div>
    <div
      className="iconParagraphContainer"
    >
      <div
        className="fauxButton"
      >
        <span
          className="span span--tiny searchIcon iconParagraphIcon"
        >
          <search.svg
            className="svg"
          />
        </span>
      </div>
      <p
        className="iconParagraph"
      >
        instructions.definitionTouch
      </p>
    </div>
    <div
      className="iconParagraphContainer"
    >
      <div
        className="fauxButton"
      >
        <span
          className="span span--tiny undoIcon iconParagraphIcon"
        >
          <undo.svg
            className="svg"
          />
        </span>
      </div>
      <p
        className="iconParagraph"
      >
        instructions.undoTouch
      </p>
    </div>
    <div
      className="characterSetContainer"
    >
      <input
        id="traditionalCheckbox"
        onChange={[Function]}
        type="checkbox"
      />
       
      <label
        htmlFor="traditionalCheckbox"
      >
        instructions.traditionalLabel
      </label>
    </div>
    <button
      className="button button"
      onClick={[Function]}
    >
      instructions.startTestButton
    </button>
  </section>
</div>
`;
